@model RaidExec.Controllers.GuildAddForm

@{
    ViewBag.Title = "AddGuild";
    string errorName = "Error, the name has already been taken.";
    string errorChar = "Error, selected character not in game.";
}

<h2>Create a Guild</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal well">
        <h4>Enter Guild Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LeaderId)
        @Html.HiddenFor(model => model.GameId)


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--<div class="form-group">
            @Html.LabelFor(model => model.GameList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*genre id or id*@

                @*@Html.DropDownList("GameId", Model.GameList, htmlAttributes: new { @class = "form-control", @disabled = "disabled", @style = "color:white;" })
                @Html.ValidationMessageFor(model => model.GameList, "", new { @class = "text-danger" })
                @if (Model.errorName)
                {
                    @Html.DisplayFor(model => errorName)
                }*@

            </div>
        </div>-->
        <!--<div class="form-group">
            @Html.LabelFor(model => model.CharacterList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*genre id or id*@
            @*    @Html.DropDownList("LeaderId", Model.CharacterList, htmlAttributes: new { @class = "form-control", @disabled = "disabled", @style = "color:white;" })
                @Html.ValidationMessageFor(model => model.CharacterList, "", new { @class = "text-danger" })
                @if (Model.errorChar)
                {
                    @Html.DisplayFor(model => errorChar)
                }*@
            </div>
        </div>-->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="full-center-spaced">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Return", "Index", "Home", null, new { @class = "btn btn-warning" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
